[
	{
		"text": "app",
		"id": "app.tensorflow.",
		"sublist": []
	},
	{
		"text": "compat",
		"id": "compat.tensorflow.",
		"sublist": []
	},
	{
		"text": "core",
		"id": "core.tensorflow.",
		"sublist": []
	},
	{
		"text": "errors",
		"id": "errors.tensorflow.",
		"sublist": []
	},
	{
		"text": "flags",
		"id": "flags.tensorflow.",
		"sublist": []
	},
	{
		"text": "gfile",
		"id": "gfile.tensorflow.",
		"sublist": []
	},
	{
		"text": "graph_util",
		"id": "graph_util.tensorflow.",
		"sublist": []
	},
	{
		"text": "image",
		"id": "image.tensorflow.",
		"sublist": []
	},
	{
		"text": "layers",
		"id": "layers.tensorflow.",
		"sublist": []
	},
	{
		"text": "logging",
		"id": "logging.tensorflow.",
		"sublist": []
	},
	{
		"text": "losses",
		"id": "losses.tensorflow.",
		"sublist": []
	},
	{
		"text": "metrics",
		"id": "metrics.tensorflow.",
		"sublist": []
	},
	{
		"text": "nn",
		"id": "nn.tensorflow.",
		"sublist":
			[{
				"text": "_ctc_ops",
				"id": "_ctc_ops.nn.tensorflow."
			},
			{
				"text": "_embedding_ops",
				"id": "_embedding_ops.nn.tensorflow."
			},
			{
				"text": "_nn_grad",
				"id": "_nn_grad.nn.tensorflow."
			},
			{
				"text": "_nn_ops",
				"id": "_nn_ops.nn.tensorflow."
			},
			{
				"text": "_sys",
				"id": "_sys.nn.tensorflow."
			},
			{
				"text": "all_candidate_sampler",
				"id": "all_candidate_sampler.nn.tensorflow."
			},
			{
				"text": "atrous_conv2d",
				"id": "atrous_conv2d.nn.tensorflow."
			},
			{
				"text": "atrous_conv2d_transpose",
				"id": "atrous_conv2d_transpose.nn.tensorflow."
			},
			{
				"text": "avg_pool",
				"id": "avg_pool.nn.tensorflow."
			},
			{
				"text": "avg_pool3d",
				"id": "avg_pool3d.nn.tensorflow."
			},
			{
				"text": "batch_norm_with_global_normalization",
				"id": "batch_norm_with_global_normalization.nn.tensorflow."
			},
			{
				"text": "batch_normalization",
				"id": "batch_normalization.nn.tensorflow."
			},
			{
				"text": "bias_add",
				"id": "bias_add.nn.tensorflow."
			},
			{
				"text": "bidirectional_dynamic_rnn",
				"id": "bidirectional_dynamic_rnn.nn.tensorflow."
			},
			{
				"text": "compute_accidental_hits",
				"id": "compute_accidental_hits.nn.tensorflow."
			},
			{
				"text": "conv1d",
				"id": "conv1d.nn.tensorflow."
			},
			{
				"text": "conv2d",
				"id": "conv2d.nn.tensorflow."
			},
			{
				"text": "conv2d_backprop_filter",
				"id": "conv2d_backprop_filter.nn.tensorflow."
			},
			{
				"text": "conv2d_backprop_input",
				"id": "conv2d_backprop_input.nn.tensorflow."
			},
			{
				"text": "conv2d_transpose",
				"id": "conv2d_transpose.nn.tensorflow."
			},
			{
				"text": "conv3d",
				"id": "conv3d.nn.tensorflow."
			},
			{
				"text": "conv3d_backprop_filter_v2",
				"id": "conv3d_backprop_filter_v2.nn.tensorflow."
			},
			{
				"text": "conv3d_transpose",
				"id": "conv3d_transpose.nn.tensorflow."
			},
			{
				"text": "convolution",
				"id": "convolution.nn.tensorflow."
			},
			{
				"text": "crelu",
				"id": "crelu.nn.tensorflow."
			},
			{
				"text": "ctc_beam_search_decoder",
				"id": "ctc_beam_search_decoder.nn.tensorflow."
			},
			{
				"text": "ctc_greedy_decoder",
				"id": "ctc_greedy_decoder.nn.tensorflow."
			},
			{
				"text": "ctc_loss",
				"id": "ctc_loss.nn.tensorflow."
			},
			{
				"text": "depthwise_conv2d",
				"id": "depthwise_conv2d.nn.tensorflow."
			},
			{
				"text": "depthwise_conv2d_native",
				"id": "depthwise_conv2d_native.nn.tensorflow."
			},
			{
				"text": "depthwise_conv2d_native_backprop_filter",
				"id": "depthwise_conv2d_native_backprop_filter.nn.tensorflow."
			},
			{
				"text": "depthwise_conv2d_native_backprop_input",
				"id": "depthwise_conv2d_native_backprop_input.nn.tensorflow."
			},
			{
				"text": "dilation2d",
				"id": "dilation2d.nn.tensorflow."
			},
			{
				"text": "dropout",
				"id": "dropout.nn.tensorflow."
			},
			{
				"text": "dynamic_rnn",
				"id": "dynamic_rnn.nn.tensorflow."
			},
			{
				"text": "elu",
				"id": "elu.nn.tensorflow."
			},
			{
				"text": "embedding_lookup",
				"id": "embedding_lookup.nn.tensorflow."
			},
			{
				"text": "embedding_lookup_sparse",
				"id": "embedding_lookup_sparse.nn.tensorflow."
			},
			{
				"text": "erosion2d",
				"id": "erosion2d.nn.tensorflow."
			},
			{
				"text": "fixed_unigram_candidate_sampler",
				"id": "fixed_unigram_candidate_sampler.nn.tensorflow."
			},
			{
				"text": "fractional_avg_pool",
				"id": "fractional_avg_pool.nn.tensorflow."
			},
			{
				"text": "fractional_max_pool",
				"id": "fractional_max_pool.nn.tensorflow."
			},
			{
				"text": "fused_batch_norm",
				"id": "fused_batch_norm.nn.tensorflow."
			},
			{
				"text": "in_top_k",
				"id": "in_top_k.nn.tensorflow."
			},
			{
				"text": "l2_loss",
				"id": "l2_loss.nn.tensorflow."
			},
			{
				"text": "l2_normalize",
				"id": "l2_normalize.nn.tensorflow."
			},
			{
				"text": "learned_unigram_candidate_sampler",
				"id": "learned_unigram_candidate_sampler.nn.tensorflow."
			},
			{
				"text": "local_response_normalization",
				"id": "local_response_normalization.nn.tensorflow."
			},
			{
				"text": "log_poisson_loss",
				"id": "log_poisson_loss.nn.tensorflow."
			},
			{
				"text": "log_softmax",
				"id": "log_softmax.nn.tensorflow."
			},
			{
				"text": "log_uniform_candidate_sampler",
				"id": "log_uniform_candidate_sampler.nn.tensorflow."
			},
			{
				"text": "lrn",
				"id": "lrn.nn.tensorflow."
			},
			{
				"text": "max_pool",
				"id": "max_pool.nn.tensorflow."
			},
			{
				"text": "max_pool3d",
				"id": "max_pool3d.nn.tensorflow."
			},
			{
				"text": "max_pool_with_argmax",
				"id": "max_pool_with_argmax.nn.tensorflow."
			},
			{
				"text": "moments",
				"id": "moments.nn.tensorflow."
			},
			{
				"text": "nce_loss",
				"id": "nce_loss.nn.tensorflow."
			},
			{
				"text": "normalize_moments",
				"id": "normalize_moments.nn.tensorflow."
			},
			{
				"text": "pool",
				"id": "pool.nn.tensorflow."
			},
			{
				"text": "quantized_avg_pool",
				"id": "quantized_avg_pool.nn.tensorflow."
			},
			{
				"text": "quantized_conv2d",
				"id": "quantized_conv2d.nn.tensorflow."
			},
			{
				"text": "quantized_max_pool",
				"id": "quantized_max_pool.nn.tensorflow."
			},
			{
				"text": "quantized_relu_x",
				"id": "quantized_relu_x.nn.tensorflow."
			},
			{
				"text": "raw_rnn",
				"id": "raw_rnn.nn.tensorflow."
			},
			{
				"text": "relu",
				"id": "relu.nn.tensorflow."
			},
			{
				"text": "relu6",
				"id": "relu6.nn.tensorflow."
			},
			{
				"text": "relu_layer",
				"id": "relu_layer.nn.tensorflow."
			},
			{
				"text": "sampled_softmax_loss",
				"id": "sampled_softmax_loss.nn.tensorflow."
			},
			{
				"text": "separable_conv2d",
				"id": "separable_conv2d.nn.tensorflow."
			},
			{
				"text": "sigmoid",
				"id": "sigmoid.nn.tensorflow."
			},
			{
				"text": "sigmoid_cross_entropy_with_logits",
				"id": "sigmoid_cross_entropy_with_logits.nn.tensorflow."
			},
			{
				"text": "softmax",
				"id": "softmax.nn.tensorflow."
			},
			{
				"text": "softmax_cross_entropy_with_logits",
				"id": "softmax_cross_entropy_with_logits.nn.tensorflow."
			},
			{
				"text": "softplus",
				"id": "softplus.nn.tensorflow."
			},
			{
				"text": "softsign",
				"id": "softsign.nn.tensorflow."
			},
			{
				"text": "sparse_softmax_cross_entropy_with_logits",
				"id": "sparse_softmax_cross_entropy_with_logits.nn.tensorflow."
			},
			{
				"text": "sufficient_statistics",
				"id": "sufficient_statistics.nn.tensorflow."
			},
			{
				"text": "tanh",
				"id": "tanh.nn.tensorflow."
			},
			{
				"text": "top_k",
				"id": "top_k.nn.tensorflow."
			},
			{
				"text": "uniform_candidate_sampler",
				"id": "uniform_candidate_sampler.nn.tensorflow."
			},
			{
				"text": "weighted_cross_entropy_with_logits",
				"id": "weighted_cross_entropy_with_logits.nn.tensorflow."
			},
			{
				"text": "weighted_moments",
				"id": "weighted_moments.nn.tensorflow."
			},
			{
				"text": "with_space_to_batch",
				"id": "with_space_to_batch.nn.tensorflow."
			},
			{
				"text": "xw_plus_b",
				"id": "xw_plus_b.nn.tensorflow."
			},
			{
				"text": "zero_fraction",
				"id": "zero_fraction.nn.tensorflow."
			}]
	},
	{
		"text": "python",
		"id": "pythontensorflow.",
		"sublist": []
	},
	{
		"text": "python_io",
		"id": "python_iotensorflow.",
		"sublist": []
	},
	{
		"text": "pywrap_tensorflow",
		"id": "pywrap_tensorflowtensorflow.",
		"sublist": []
	},
	{
		"text": "resource_loader",
		"id": "resource_loadertensorflow.",
		"sublist": []
	},
	{
		"text": "saved_model",
		"id": "saved_modeltensorflow.",
		"sublist": []
	},
	{
		"text": "sdca",
		"id": "sdcatensorflow.",
		"sublist": []
	},
	{
		"text": "sets",
		"id": "setstensorflow.",
		"sublist": []
	},
	{
		"text": "summary",
		"id": "summarytensorflow.",
		"sublist": []
	},
	{
		"text": "sysconfig",
		"id": "sysconfigtensorflow.",
		"sublist": []
	},
	{
		"text": "test",
		"id": "testtensorflow.",
		"sublist": []
	},
	{
		"text": "train",
		"id": "traintensorflow.",
		"sublist": []
	},
	{
		"text": "user_ops",
		"id": "user_opstensorflow.",
		"sublist": []
	},
	{
		"text": "Assert",
		"id": "Asserttensorflow.",
		"sublist": []
	},
	{
		"text": "NoGradient",
		"id": "NoGradienttensorflow.",
		"sublist": []
	},
	{
		"text": "NotDifferentiable",
		"id": "NotDifferentiabletensorflow.",
		"sublist": []
	},
	{
		"text": "Print",
		"id": "Printtensorflow.",
		"sublist": []
	},
	{
		"text": "abs",
		"id": "abstensorflow.",
		"sublist": []
	},
	{
		"text": "accumulate_n",
		"id": "accumulate_ntensorflow.",
		"sublist": []
	},
	{
		"text": "acos",
		"id": "acostensorflow.",
		"sublist": []
	},
	{
		"text": "add",
		"id": "addtensorflow.",
		"sublist": []
	},
	{
		"text": "add_check_numerics_ops",
		"id": "add_check_numerics_opstensorflow.",
		"sublist": []
	},
	{
		"text": "add_n",
		"id": "add_ntensorflow.",
		"sublist": []
	},
	{
		"text": "add_to_collection",
		"id": "add_to_collectiontensorflow.",
		"sublist": []
	},
	{
		"text": "all_variables",
		"id": "all_variablestensorflow.",
		"sublist": []
	},
	{
		"text": "arg_max",
		"id": "arg_maxtensorflow.",
		"sublist": []
	},
	{
		"text": "arg_min",
		"id": "arg_mintensorflow.",
		"sublist": []
	},
	{
		"text": "argmax",
		"id": "argmaxtensorflow.",
		"sublist": []
	},
	{
		"text": "argmin",
		"id": "argmintensorflow.",
		"sublist": []
	},
	{
		"text": "as_dtype",
		"id": "as_dtypetensorflow.",
		"sublist": []
	},
	{
		"text": "as_string",
		"id": "as_stringtensorflow.",
		"sublist": []
	},
	{
		"text": "asin",
		"id": "asintensorflow.",
		"sublist": []
	},
	{
		"text": "assert_equal",
		"id": "assert_equaltensorflow.",
		"sublist": []
	},
	{
		"text": "assert_greater",
		"id": "assert_greatertensorflow.",
		"sublist": []
	},
	{
		"text": "assert_greater_equal",
		"id": "assert_greater_equaltensorflow.",
		"sublist": []
	},
	{
		"text": "assert_integer",
		"id": "assert_integertensorflow.",
		"sublist": []
	},
	{
		"text": "assert_less",
		"id": "assert_lesstensorflow.",
		"sublist": []
	},
	{
		"text": "assert_less_equal",
		"id": "assert_less_equaltensorflow.",
		"sublist": []
	},
	{
		"text": "assert_negative",
		"id": "assert_negativetensorflow.",
		"sublist": []
	},
	{
		"text": "assert_non_negative",
		"id": "assert_non_negativetensorflow.",
		"sublist": []
	},
	{
		"text": "assert_non_positive",
		"id": "assert_non_positivetensorflow.",
		"sublist": []
	},
	{
		"text": "assert_positive",
		"id": "assert_positivetensorflow.",
		"sublist": []
	},
	{
		"text": "assert_proper_iterable",
		"id": "assert_proper_iterabletensorflow.",
		"sublist": []
	},
	{
		"text": "assert_rank",
		"id": "assert_ranktensorflow.",
		"sublist": []
	},
	{
		"text": "assert_rank_at_least",
		"id": "assert_rank_at_leasttensorflow.",
		"sublist": []
	},
	{
		"text": "assert_type",
		"id": "assert_typetensorflow.",
		"sublist": []
	},
	{
		"text": "assert_variables_initialized",
		"id": "assert_variables_initializedtensorflow.",
		"sublist": []
	},
	{
		"text": "assign",
		"id": "assigntensorflow.",
		"sublist": []
	},
	{
		"text": "assign_add",
		"id": "assign_addtensorflow.",
		"sublist": []
	},
	{
		"text": "assign_sub",
		"id": "assign_subtensorflow.",
		"sublist": []
	},
	{
		"text": "atan",
		"id": "atantensorflow.",
		"sublist": []
	},
	{
		"text": "batch_to_space",
		"id": "batch_to_spacetensorflow.",
		"sublist": []
	},
	{
		"text": "batch_to_space_nd",
		"id": "batch_to_space_ndtensorflow.",
		"sublist": []
	},
	{
		"text": "betainc",
		"id": "betainctensorflow.",
		"sublist": []
	},
	{
		"text": "bitcast",
		"id": "bitcasttensorflow.",
		"sublist": []
	},
	{
		"text": "boolean_mask",
		"id": "boolean_masktensorflow.",
		"sublist": []
	},
	{
		"text": "broadcast_dynamic_shape",
		"id": "broadcast_dynamic_shapetensorflow.",
		"sublist": []
	},
	{
		"text": "broadcast_static_shape",
		"id": "broadcast_static_shapetensorflow.",
		"sublist": []
	},
	{
		"text": "case",
		"id": "casetensorflow.",
		"sublist": []
	},
	{
		"text": "cast",
		"id": "casttensorflow.",
		"sublist": []
	},
	{
		"text": "ceil",
		"id": "ceiltensorflow.",
		"sublist": []
	},
	{
		"text": "check_numerics",
		"id": "check_numericstensorflow.",
		"sublist": []
	},
	{
		"text": "cholesky",
		"id": "choleskytensorflow.",
		"sublist": []
	},
	{
		"text": "cholesky_solve",
		"id": "cholesky_solvetensorflow.",
		"sublist": []
	},
	{
		"text": "clip_by_average_norm",
		"id": "clip_by_average_normtensorflow.",
		"sublist": []
	},
	{
		"text": "clip_by_global_norm",
		"id": "clip_by_global_normtensorflow.",
		"sublist": []
	},
	{
		"text": "clip_by_norm",
		"id": "clip_by_normtensorflow.",
		"sublist": []
	},
	{
		"text": "clip_by_value",
		"id": "clip_by_valuetensorflow.",
		"sublist": []
	},
	{
		"text": "complex",
		"id": "complextensorflow.",
		"sublist": []
	},
	{
		"text": "concat",
		"id": "concattensorflow.",
		"sublist": []
	},
	{
		"text": "cond",
		"id": "condtensorflow.",
		"sublist": []
	},
	{
		"text": "confusion_matrix",
		"id": "confusion_matrixtensorflow.",
		"sublist": []
	},
	{
		"text": "conj",
		"id": "conjtensorflow.",
		"sublist": []
	},
	{
		"text": "constant",
		"id": "constanttensorflow.",
		"sublist": []
	},
	{
		"text": "container",
		"id": "containertensorflow.",
		"sublist": []
	},
	{
		"text": "control_dependencies",
		"id": "control_dependenciestensorflow.",
		"sublist": []
	},
	{
		"text": "convert_to_tensor",
		"id": "convert_to_tensortensorflow.",
		"sublist": []
	},
	{
		"text": "convert_to_tensor_or_indexed_slices",
		"id": "convert_to_tensor_or_indexed_slicestensorflow.",
		"sublist": []
	},
	{
		"text": "convert_to_tensor_or_sparse_tensor",
		"id": "convert_to_tensor_or_sparse_tensortensorflow.",
		"sublist": []
	},
	{
		"text": "cos",
		"id": "costensorflow.",
		"sublist": []
	},
	{
		"text": "count_nonzero",
		"id": "count_nonzerotensorflow.",
		"sublist": []
	},
	{
		"text": "count_up_to",
		"id": "count_up_totensorflow.",
		"sublist": []
	},
	{
		"text": "create_partitioned_variables",
		"id": "create_partitioned_variablestensorflow.",
		"sublist": []
	},
	{
		"text": "cross",
		"id": "crosstensorflow.",
		"sublist": []
	},
	{
		"text": "cumprod",
		"id": "cumprodtensorflow.",
		"sublist": []
	},
	{
		"text": "cumsum",
		"id": "cumsumtensorflow.",
		"sublist": []
	},
	{
		"text": "decode_base64",
		"id": "decode_base64tensorflow.",
		"sublist": []
	},
	{
		"text": "decode_csv",
		"id": "decode_csvtensorflow.",
		"sublist": []
	},
	{
		"text": "decode_json_example",
		"id": "decode_json_exampletensorflow.",
		"sublist": []
	},
	{
		"text": "decode_raw",
		"id": "decode_rawtensorflow.",
		"sublist": []
	},
	{
		"text": "delete_session_tensor",
		"id": "delete_session_tensortensorflow.",
		"sublist": []
	},
	{
		"text": "depth_to_space",
		"id": "depth_to_spacetensorflow.",
		"sublist": []
	},
	{
		"text": "dequantize",
		"id": "dequantizetensorflow.",
		"sublist": []
	},
	{
		"text": "deserialize_many_sparse",
		"id": "deserialize_many_sparsetensorflow.",
		"sublist": []
	},
	{
		"text": "device",
		"id": "devicetensorflow.",
		"sublist": []
	},
	{
		"text": "diag",
		"id": "diagtensorflow.",
		"sublist": []
	},
	{
		"text": "diag_part",
		"id": "diag_parttensorflow.",
		"sublist": []
	},
	{
		"text": "digamma",
		"id": "digammatensorflow.",
		"sublist": []
	},
	{
		"text": "div",
		"id": "divtensorflow.",
		"sublist": []
	},
	{
		"text": "divide",
		"id": "dividetensorflow.",
		"sublist": []
	},
	{
		"text": "dynamic_partition",
		"id": "dynamic_partitiontensorflow.",
		"sublist": []
	},
	{
		"text": "dynamic_stitch",
		"id": "dynamic_stitchtensorflow.",
		"sublist": []
	},
	{
		"text": "edit_distance",
		"id": "edit_distancetensorflow.",
		"sublist": []
	},
	{
		"text": "einsum",
		"id": "einsumtensorflow.",
		"sublist": []
	},
	{
		"text": "encode_base64",
		"id": "encode_base64tensorflow.",
		"sublist": []
	},
	{
		"text": "equal",
		"id": "equaltensorflow.",
		"sublist": []
	},
	{
		"text": "erf",
		"id": "erftensorflow.",
		"sublist": []
	},
	{
		"text": "erfc",
		"id": "erfctensorflow.",
		"sublist": []
	},
	{
		"text": "exp",
		"id": "exptensorflow.",
		"sublist": []
	},
	{
		"text": "expand_dims",
		"id": "expand_dimstensorflow.",
		"sublist": []
	},
	{
		"text": "expm1",
		"id": "expm1tensorflow.",
		"sublist": []
	},
	{
		"text": "extract_image_patches",
		"id": "extract_image_patchestensorflow.",
		"sublist": []
	},
	{
		"text": "eye",
		"id": "eyetensorflow.",
		"sublist": []
	},
	{
		"text": "fake_quant_with_min_max_args",
		"id": "fake_quant_with_min_max_argstensorflow.",
		"sublist": []
	},
	{
		"text": "fake_quant_with_min_max_args_gradient",
		"id": "fake_quant_with_min_max_args_gradienttensorflow.",
		"sublist": []
	},
	{
		"text": "fake_quant_with_min_max_vars",
		"id": "fake_quant_with_min_max_varstensorflow.",
		"sublist": []
	},
	{
		"text": "fake_quant_with_min_max_vars_gradient",
		"id": "fake_quant_with_min_max_vars_gradienttensorflow.",
		"sublist": []
	},
	{
		"text": "fake_quant_with_min_max_vars_per_channel",
		"id": "fake_quant_with_min_max_vars_per_channeltensorflow.",
		"sublist": []
	},
	{
		"text": "fake_quant_with_min_max_vars_per_channel_gradient",
		"id": "fake_quant_with_min_max_vars_per_channel_gradienttensorflow.",
		"sublist": []
	},
	{
		"text": "fft",
		"id": "ffttensorflow.",
		"sublist": []
	},
	{
		"text": "fft2d",
		"id": "fft2dtensorflow.",
		"sublist": []
	},
	{
		"text": "fft3d",
		"id": "fft3dtensorflow.",
		"sublist": []
	},
	{
		"text": "fill",
		"id": "filltensorflow.",
		"sublist": []
	},
	{
		"text": "fixed_size_partitioner",
		"id": "fixed_size_partitionertensorflow.",
		"sublist": []
	},
	{
		"text": "floor",
		"id": "floortensorflow.",
		"sublist": []
	},
	{
		"text": "floor_div",
		"id": "floor_divtensorflow.",
		"sublist": []
	},
	{
		"text": "floordiv",
		"id": "floordivtensorflow.",
		"sublist": []
	},
	{
		"text": "floormod",
		"id": "floormodtensorflow.",
		"sublist": []
	},
	{
		"text": "foldl",
		"id": "foldltensorflow.",
		"sublist": []
	},
	{
		"text": "foldr",
		"id": "foldrtensorflow.",
		"sublist": []
	},
	{
		"text": "gather",
		"id": "gathertensorflow.",
		"sublist": []
	},
	{
		"text": "gather_nd",
		"id": "gather_ndtensorflow.",
		"sublist": []
	},
	{
		"text": "get_collection",
		"id": "get_collectiontensorflow.",
		"sublist": []
	},
	{
		"text": "get_collection_ref",
		"id": "get_collection_reftensorflow.",
		"sublist": []
	},
	{
		"text": "get_default_graph",
		"id": "get_default_graphtensorflow.",
		"sublist": []
	},
	{
		"text": "get_default_session",
		"id": "get_default_sessiontensorflow.",
		"sublist": []
	},
	{
		"text": "get_local_variable",
		"id": "get_local_variabletensorflow.",
		"sublist": []
	},
	{
		"text": "get_seed",
		"id": "get_seedtensorflow.",
		"sublist": []
	},
	{
		"text": "get_session_handle",
		"id": "get_session_handletensorflow.",
		"sublist": []
	},
	{
		"text": "get_session_tensor",
		"id": "get_session_tensortensorflow.",
		"sublist": []
	},
	{
		"text": "get_variable",
		"id": "get_variabletensorflow.",
		"sublist": []
	},
	{
		"text": "get_variable_scope",
		"id": "get_variable_scopetensorflow.",
		"sublist": []
	},
	{
		"text": "global_norm",
		"id": "global_normtensorflow.",
		"sublist": []
	},
	{
		"text": "global_variables",
		"id": "global_variablestensorflow.",
		"sublist": []
	},
	{
		"text": "global_variables_initializer",
		"id": "global_variables_initializertensorflow.",
		"sublist": []
	},
	{
		"text": "gradients",
		"id": "gradientstensorflow.",
		"sublist": []
	},
	{
		"text": "greater",
		"id": "greatertensorflow.",
		"sublist": []
	},
	{
		"text": "greater_equal",
		"id": "greater_equaltensorflow.",
		"sublist": []
	},
	{
		"text": "group",
		"id": "grouptensorflow.",
		"sublist": []
	},
	{
		"text": "hessians",
		"id": "hessianstensorflow.",
		"sublist": []
	},
	{
		"text": "histogram_fixed_width",
		"id": "histogram_fixed_widthtensorflow.",
		"sublist": []
	},
	{
		"text": "identity",
		"id": "identitytensorflow.",
		"sublist": []
	},
	{
		"text": "ifft",
		"id": "iffttensorflow.",
		"sublist": []
	},
	{
		"text": "ifft2d",
		"id": "ifft2dtensorflow.",
		"sublist": []
	},
	{
		"text": "ifft3d",
		"id": "ifft3dtensorflow.",
		"sublist": []
	},
	{
		"text": "igamma",
		"id": "igammatensorflow.",
		"sublist": []
	},
	{
		"text": "igammac",
		"id": "igammactensorflow.",
		"sublist": []
	},
	{
		"text": "imag",
		"id": "imagtensorflow.",
		"sublist": []
	},
	{
		"text": "import_graph_def",
		"id": "import_graph_deftensorflow.",
		"sublist": []
	},
	{
		"text": "initialize_all_tables",
		"id": "initialize_all_tablestensorflow.",
		"sublist": []
	},
	{
		"text": "initialize_all_variables",
		"id": "initialize_all_variablestensorflow.",
		"sublist": []
	},
	{
		"text": "initialize_local_variables",
		"id": "initialize_local_variablestensorflow.",
		"sublist": []
	},
	{
		"text": "initialize_variables",
		"id": "initialize_variablestensorflow.",
		"sublist": []
	},
	{
		"text": "invert_permutation",
		"id": "invert_permutationtensorflow.",
		"sublist": []
	},
	{
		"text": "is_finite",
		"id": "is_finitetensorflow.",
		"sublist": []
	},
	{
		"text": "is_inf",
		"id": "is_inftensorflow.",
		"sublist": []
	},
	{
		"text": "is_nan",
		"id": "is_nantensorflow.",
		"sublist": []
	},
	{
		"text": "is_non_decreasing",
		"id": "is_non_decreasingtensorflow.",
		"sublist": []
	},
	{
		"text": "is_numeric_tensor",
		"id": "is_numeric_tensortensorflow.",
		"sublist": []
	},
	{
		"text": "is_strictly_increasing",
		"id": "is_strictly_increasingtensorflow.",
		"sublist": []
	},
	{
		"text": "is_variable_initialized",
		"id": "is_variable_initializedtensorflow.",
		"sublist": []
	},
	{
		"text": "lbeta",
		"id": "lbetatensorflow.",
		"sublist": []
	},
	{
		"text": "less",
		"id": "lesstensorflow.",
		"sublist": []
	},
	{
		"text": "less_equal",
		"id": "less_equaltensorflow.",
		"sublist": []
	},
	{
		"text": "lgamma",
		"id": "lgammatensorflow.",
		"sublist": []
	},
	{
		"text": "lin_space",
		"id": "lin_spacetensorflow.",
		"sublist": []
	},
	{
		"text": "linspace",
		"id": "linspacetensorflow.",
		"sublist": []
	},
	{
		"text": "load_file_system_library",
		"id": "load_file_system_librarytensorflow.",
		"sublist": []
	},
	{
		"text": "load_op_library",
		"id": "load_op_librarytensorflow.",
		"sublist": []
	},
	{
		"text": "local_variables",
		"id": "local_variablestensorflow.",
		"sublist": []
	},
	{
		"text": "local_variables_initializer",
		"id": "local_variables_initializertensorflow.",
		"sublist": []
	},
	{
		"text": "log",
		"id": "logtensorflow.",
		"sublist": []
	},
	{
		"text": "log1p",
		"id": "log1ptensorflow.",
		"sublist": []
	},
	{
		"text": "logical_and",
		"id": "logical_andtensorflow.",
		"sublist": []
	},
	{
		"text": "logical_not",
		"id": "logical_nottensorflow.",
		"sublist": []
	},
	{
		"text": "logical_or",
		"id": "logical_ortensorflow.",
		"sublist": []
	},
	{
		"text": "logical_xor",
		"id": "logical_xortensorflow.",
		"sublist": []
	},
	{
		"text": "make_template",
		"id": "make_templatetensorflow.",
		"sublist": []
	},
	{
		"text": "map_fn",
		"id": "map_fntensorflow.",
		"sublist": []
	},
	{
		"text": "matching_files",
		"id": "matching_filestensorflow.",
		"sublist": []
	},
	{
		"text": "matmul",
		"id": "matmultensorflow.",
		"sublist": []
	},
	{
		"text": "matrix_band_part",
		"id": "matrix_band_parttensorflow.",
		"sublist": []
	},
	{
		"text": "matrix_determinant",
		"id": "matrix_determinanttensorflow.",
		"sublist": []
	},
	{
		"text": "matrix_diag",
		"id": "matrix_diagtensorflow.",
		"sublist": []
	},
	{
		"text": "matrix_diag_part",
		"id": "matrix_diag_parttensorflow.",
		"sublist": []
	},
	{
		"text": "matrix_inverse",
		"id": "matrix_inversetensorflow.",
		"sublist": []
	},
	{
		"text": "matrix_set_diag",
		"id": "matrix_set_diagtensorflow.",
		"sublist": []
	},
	{
		"text": "matrix_solve",
		"id": "matrix_solvetensorflow.",
		"sublist": []
	},
	{
		"text": "matrix_solve_ls",
		"id": "matrix_solve_lstensorflow.",
		"sublist": []
	},
	{
		"text": "matrix_transpose",
		"id": "matrix_transposetensorflow.",
		"sublist": []
	},
	{
		"text": "matrix_triangular_solve",
		"id": "matrix_triangular_solvetensorflow.",
		"sublist": []
	},
	{
		"text": "maximum",
		"id": "maximumtensorflow.",
		"sublist": []
	},
	{
		"text": "meshgrid",
		"id": "meshgridtensorflow.",
		"sublist": []
	},
	{
		"text": "min_max_variable_partitioner",
		"id": "min_max_variable_partitionertensorflow.",
		"sublist": []
	},
	{
		"text": "minimum",
		"id": "minimumtensorflow.",
		"sublist": []
	},
	{
		"text": "mod",
		"id": "modtensorflow.",
		"sublist": []
	},
	{
		"text": "model_variables",
		"id": "model_variablestensorflow.",
		"sublist": []
	},
	{
		"text": "moving_average_variables",
		"id": "moving_average_variablestensorflow.",
		"sublist": []
	},
	{
		"text": "multinomial",
		"id": "multinomialtensorflow.",
		"sublist": []
	},
	{
		"text": "multiply",
		"id": "multiplytensorflow.",
		"sublist": []
	},
	{
		"text": "name_scope",
		"id": "name_scopetensorflow.",
		"sublist": []
	},
	{
		"text": "negative",
		"id": "negativetensorflow.",
		"sublist": []
	},
	{
		"text": "no_op",
		"id": "no_optensorflow.",
		"sublist": []
	},
	{
		"text": "no_regularizer",
		"id": "no_regularizertensorflow.",
		"sublist": []
	},
	{
		"text": "norm",
		"id": "normtensorflow.",
		"sublist": []
	},
	{
		"text": "not_equal",
		"id": "not_equaltensorflow.",
		"sublist": []
	},
	{
		"text": "one_hot",
		"id": "one_hottensorflow.",
		"sublist": []
	},
	{
		"text": "ones",
		"id": "onestensorflow.",
		"sublist": []
	},
	{
		"text": "ones_like",
		"id": "ones_liketensorflow.",
		"sublist": []
	},
	{
		"text": "op_scope",
		"id": "op_scopetensorflow.",
		"sublist": []
	},
	{
		"text": "pad",
		"id": "padtensorflow.",
		"sublist": []
	},
	{
		"text": "parallel_stack",
		"id": "parallel_stacktensorflow.",
		"sublist": []
	},
	{
		"text": "parse_example",
		"id": "parse_exampletensorflow.",
		"sublist": []
	},
	{
		"text": "parse_single_example",
		"id": "parse_single_exampletensorflow.",
		"sublist": []
	},
	{
		"text": "parse_single_sequence_example",
		"id": "parse_single_sequence_exampletensorflow.",
		"sublist": []
	},
	{
		"text": "parse_tensor",
		"id": "parse_tensortensorflow.",
		"sublist": []
	},
	{
		"text": "placeholder",
		"id": "placeholdertensorflow.",
		"sublist": []
	},
	{
		"text": "placeholder_with_default",
		"id": "placeholder_with_defaulttensorflow.",
		"sublist": []
	},
	{
		"text": "polygamma",
		"id": "polygammatensorflow.",
		"sublist": []
	},
	{
		"text": "pow",
		"id": "powtensorflow.",
		"sublist": []
	},
	{
		"text": "py_func",
		"id": "py_functensorflow.",
		"sublist": []
	},
	{
		"text": "qr",
		"id": "qrtensorflow.",
		"sublist": []
	},
	{
		"text": "quantize_v2",
		"id": "quantize_v2tensorflow.",
		"sublist": []
	},
	{
		"text": "quantized_concat",
		"id": "quantized_concattensorflow.",
		"sublist": []
	},
	{
		"text": "random_crop",
		"id": "random_croptensorflow.",
		"sublist": []
	},
	{
		"text": "random_gamma",
		"id": "random_gammatensorflow.",
		"sublist": []
	},
	{
		"text": "random_normal",
		"id": "random_normaltensorflow.",
		"sublist": []
	},
	{
		"text": "random_shuffle",
		"id": "random_shuffletensorflow.",
		"sublist": []
	},
	{
		"text": "random_uniform",
		"id": "random_uniformtensorflow.",
		"sublist": []
	},
	{
		"text": "range",
		"id": "rangetensorflow.",
		"sublist": []
	},
	{
		"text": "rank",
		"id": "ranktensorflow.",
		"sublist": []
	},
	{
		"text": "read_file",
		"id": "read_filetensorflow.",
		"sublist": []
	},
	{
		"text": "real",
		"id": "realtensorflow.",
		"sublist": []
	},
	{
		"text": "realdiv",
		"id": "realdivtensorflow.",
		"sublist": []
	},
	{
		"text": "reciprocal",
		"id": "reciprocaltensorflow.",
		"sublist": []
	},
	{
		"text": "reduce_all",
		"id": "reduce_alltensorflow.",
		"sublist": []
	},
	{
		"text": "reduce_any",
		"id": "reduce_anytensorflow.",
		"sublist": []
	},
	{
		"text": "reduce_join",
		"id": "reduce_jointensorflow.",
		"sublist": []
	},
	{
		"text": "reduce_logsumexp",
		"id": "reduce_logsumexptensorflow.",
		"sublist": []
	},
	{
		"text": "reduce_max",
		"id": "reduce_maxtensorflow.",
		"sublist": []
	},
	{
		"text": "reduce_mean",
		"id": "reduce_meantensorflow.",
		"sublist": []
	},
	{
		"text": "reduce_min",
		"id": "reduce_mintensorflow.",
		"sublist": []
	},
	{
		"text": "reduce_prod",
		"id": "reduce_prodtensorflow.",
		"sublist": []
	},
	{
		"text": "reduce_sum",
		"id": "reduce_sumtensorflow.",
		"sublist": []
	},
	{
		"text": "register_tensor_conversion_function",
		"id": "register_tensor_conversion_functiontensorflow.",
		"sublist": []
	},
	{
		"text": "report_uninitialized_variables",
		"id": "report_uninitialized_variablestensorflow.",
		"sublist": []
	},
	{
		"text": "required_space_to_batch_paddings",
		"id": "required_space_to_batch_paddingstensorflow.",
		"sublist": []
	},
	{
		"text": "reset_default_graph",
		"id": "reset_default_graphtensorflow.",
		"sublist": []
	},
	{
		"text": "reshape",
		"id": "reshapetensorflow.",
		"sublist": []
	},
	{
		"text": "reverse",
		"id": "reversetensorflow.",
		"sublist": []
	},
	{
		"text": "reverse_sequence",
		"id": "reverse_sequencetensorflow.",
		"sublist": []
	},
	{
		"text": "reverse_v2",
		"id": "reverse_v2tensorflow.",
		"sublist": []
	},
	{
		"text": "rint",
		"id": "rinttensorflow.",
		"sublist": []
	},
	{
		"text": "round",
		"id": "roundtensorflow.",
		"sublist": []
	},
	{
		"text": "rsqrt",
		"id": "rsqrttensorflow.",
		"sublist": []
	},
	{
		"text": "saturate_cast",
		"id": "saturate_casttensorflow.",
		"sublist": []
	},
	{
		"text": "scalar_mul",
		"id": "scalar_multensorflow.",
		"sublist": []
	},
	{
		"text": "scan",
		"id": "scantensorflow.",
		"sublist": []
	},
	{
		"text": "scatter_add",
		"id": "scatter_addtensorflow.",
		"sublist": []
	},
	{
		"text": "scatter_div",
		"id": "scatter_divtensorflow.",
		"sublist": []
	},
	{
		"text": "scatter_mul",
		"id": "scatter_multensorflow.",
		"sublist": []
	},
	{
		"text": "scatter_nd",
		"id": "scatter_ndtensorflow.",
		"sublist": []
	},
	{
		"text": "scatter_nd_add",
		"id": "scatter_nd_addtensorflow.",
		"sublist": []
	},
	{
		"text": "scatter_nd_sub",
		"id": "scatter_nd_subtensorflow.",
		"sublist": []
	},
	{
		"text": "scatter_nd_update",
		"id": "scatter_nd_updatetensorflow.",
		"sublist": []
	},
	{
		"text": "scatter_sub",
		"id": "scatter_subtensorflow.",
		"sublist": []
	},
	{
		"text": "scatter_update",
		"id": "scatter_updatetensorflow.",
		"sublist": []
	},
	{
		"text": "segment_max",
		"id": "segment_maxtensorflow.",
		"sublist": []
	},
	{
		"text": "segment_mean",
		"id": "segment_meantensorflow.",
		"sublist": []
	},
	{
		"text": "segment_min",
		"id": "segment_mintensorflow.",
		"sublist": []
	},
	{
		"text": "segment_prod",
		"id": "segment_prodtensorflow.",
		"sublist": []
	},
	{
		"text": "segment_sum",
		"id": "segment_sumtensorflow.",
		"sublist": []
	},
	{
		"text": "self_adjoint_eig",
		"id": "self_adjoint_eigtensorflow.",
		"sublist": []
	},
	{
		"text": "self_adjoint_eigvals",
		"id": "self_adjoint_eigvalstensorflow.",
		"sublist": []
	},
	{
		"text": "sequence_mask",
		"id": "sequence_masktensorflow.",
		"sublist": []
	},
	{
		"text": "serialize_many_sparse",
		"id": "serialize_many_sparsetensorflow.",
		"sublist": []
	},
	{
		"text": "serialize_sparse",
		"id": "serialize_sparsetensorflow.",
		"sublist": []
	},
	{
		"text": "set_random_seed",
		"id": "set_random_seedtensorflow.",
		"sublist": []
	},
	{
		"text": "setdiff1d",
		"id": "setdiff1dtensorflow.",
		"sublist": []
	},
	{
		"text": "shape",
		"id": "shapetensorflow.",
		"sublist": []
	},
	{
		"text": "shape_n",
		"id": "shape_ntensorflow.",
		"sublist": []
	},
	{
		"text": "sigmoid",
		"id": "sigmoidtensorflow.",
		"sublist": []
	},
	{
		"text": "sign",
		"id": "signtensorflow.",
		"sublist": []
	},
	{
		"text": "sin",
		"id": "sintensorflow.",
		"sublist": []
	},
	{
		"text": "size",
		"id": "sizetensorflow.",
		"sublist": []
	},
	{
		"text": "slice",
		"id": "slicetensorflow.",
		"sublist": []
	},
	{
		"text": "space_to_batch",
		"id": "space_to_batchtensorflow.",
		"sublist": []
	},
	{
		"text": "space_to_batch_nd",
		"id": "space_to_batch_ndtensorflow.",
		"sublist": []
	},
	{
		"text": "space_to_depth",
		"id": "space_to_depthtensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_add",
		"id": "sparse_addtensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_concat",
		"id": "sparse_concattensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_fill_empty_rows",
		"id": "sparse_fill_empty_rowstensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_mask",
		"id": "sparse_masktensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_matmul",
		"id": "sparse_matmultensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_maximum",
		"id": "sparse_maximumtensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_merge",
		"id": "sparse_mergetensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_minimum",
		"id": "sparse_minimumtensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_placeholder",
		"id": "sparse_placeholdertensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_reduce_sum",
		"id": "sparse_reduce_sumtensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_reduce_sum_sparse",
		"id": "sparse_reduce_sum_sparsetensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_reorder",
		"id": "sparse_reordertensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_reset_shape",
		"id": "sparse_reset_shapetensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_reshape",
		"id": "sparse_reshapetensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_retain",
		"id": "sparse_retaintensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_segment_mean",
		"id": "sparse_segment_meantensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_segment_sqrt_n",
		"id": "sparse_segment_sqrt_ntensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_segment_sum",
		"id": "sparse_segment_sumtensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_softmax",
		"id": "sparse_softmaxtensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_split",
		"id": "sparse_splittensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_tensor_dense_matmul",
		"id": "sparse_tensor_dense_matmultensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_tensor_to_dense",
		"id": "sparse_tensor_to_densetensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_to_dense",
		"id": "sparse_to_densetensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_to_indicator",
		"id": "sparse_to_indicatortensorflow.",
		"sublist": []
	},
	{
		"text": "sparse_transpose",
		"id": "sparse_transposetensorflow.",
		"sublist": []
	},
	{
		"text": "split",
		"id": "splittensorflow.",
		"sublist": []
	},
	{
		"text": "sqrt",
		"id": "sqrttensorflow.",
		"sublist": []
	},
	{
		"text": "square",
		"id": "squaretensorflow.",
		"sublist": []
	},
	{
		"text": "squared_difference",
		"id": "squared_differencetensorflow.",
		"sublist": []
	},
	{
		"text": "squeeze",
		"id": "squeezetensorflow.",
		"sublist": []
	},
	{
		"text": "stack",
		"id": "stacktensorflow.",
		"sublist": []
	},
	{
		"text": "stop_gradient",
		"id": "stop_gradienttensorflow.",
		"sublist": []
	},
	{
		"text": "strided_slice",
		"id": "strided_slicetensorflow.",
		"sublist": []
	},
	{
		"text": "string_join",
		"id": "string_jointensorflow.",
		"sublist": []
	},
	{
		"text": "string_split",
		"id": "string_splittensorflow.",
		"sublist": []
	},
	{
		"text": "string_to_hash_bucket",
		"id": "string_to_hash_buckettensorflow.",
		"sublist": []
	},
	{
		"text": "string_to_hash_bucket_fast",
		"id": "string_to_hash_bucket_fasttensorflow.",
		"sublist": []
	},
	{
		"text": "string_to_hash_bucket_strong",
		"id": "string_to_hash_bucket_strongtensorflow.",
		"sublist": []
	},
	{
		"text": "string_to_number",
		"id": "string_to_numbertensorflow.",
		"sublist": []
	},
	{
		"text": "substr",
		"id": "substrtensorflow.",
		"sublist": []
	},
	{
		"text": "subtract",
		"id": "subtracttensorflow.",
		"sublist": []
	},
	{
		"text": "svd",
		"id": "svdtensorflow.",
		"sublist": []
	},
	{
		"text": "tables_initializer",
		"id": "tables_initializertensorflow.",
		"sublist": []
	},
	{
		"text": "tan",
		"id": "tantensorflow.",
		"sublist": []
	},
	{
		"text": "tanh",
		"id": "tanhtensorflow.",
		"sublist": []
	},
	{
		"text": "tensordot",
		"id": "tensordottensorflow.",
		"sublist": []
	},
	{
		"text": "tile",
		"id": "tiletensorflow.",
		"sublist": []
	},
	{
		"text": "to_bfloat16",
		"id": "to_bfloat16tensorflow.",
		"sublist": []
	},
	{
		"text": "to_double",
		"id": "to_doubletensorflow.",
		"sublist": []
	},
	{
		"text": "to_float",
		"id": "to_floattensorflow.",
		"sublist": []
	},
	{
		"text": "to_int32",
		"id": "to_int32tensorflow.",
		"sublist": []
	},
	{
		"text": "to_int64",
		"id": "to_int64tensorflow.",
		"sublist": []
	},
	{
		"text": "trace",
		"id": "tracetensorflow.",
		"sublist": []
	},
	{
		"text": "trainable_variables",
		"id": "trainable_variablestensorflow.",
		"sublist": []
	},
	{
		"text": "transpose",
		"id": "transposetensorflow.",
		"sublist": []
	},
	{
		"text": "truediv",
		"id": "truedivtensorflow.",
		"sublist": []
	},
	{
		"text": "truncated_normal",
		"id": "truncated_normaltensorflow.",
		"sublist": []
	},
	{
		"text": "truncatediv",
		"id": "truncatedivtensorflow.",
		"sublist": []
	},
	{
		"text": "truncatemod",
		"id": "truncatemodtensorflow.",
		"sublist": []
	},
	{
		"text": "tuple",
		"id": "tupletensorflow.",
		"sublist": []
	},
	{
		"text": "unique",
		"id": "uniquetensorflow.",
		"sublist": []
	},
	{
		"text": "unique_with_counts",
		"id": "unique_with_countstensorflow.",
		"sublist": []
	},
	{
		"text": "unsorted_segment_sum",
		"id": "unsorted_segment_sumtensorflow.",
		"sublist": []
	},
	{
		"text": "unstack",
		"id": "unstacktensorflow.",
		"sublist": []
	},
	{
		"text": "variable_axis_size_partitioner",
		"id": "variable_axis_size_partitionertensorflow.",
		"sublist": []
	},
	{
		"text": "variable_op_scope",
		"id": "variable_op_scopetensorflow.",
		"sublist": []
	},
	{
		"text": "variable_scope",
		"id": "variable_scopetensorflow.",
		"sublist": []
	},
	{
		"text": "variables_initializer",
		"id": "variables_initializertensorflow.",
		"sublist": []
	},
	{
		"text": "verify_tensor_all_finite",
		"id": "verify_tensor_all_finitetensorflow.",
		"sublist": []
	},
	{
		"text": "where",
		"id": "wheretensorflow.",
		"sublist": []
	},
	{
		"text": "while_loop",
		"id": "while_looptensorflow.",
		"sublist": []
	},
	{
		"text": "write_file",
		"id": "write_filetensorflow.",
		"sublist": []
	},
	{
		"text": "zeros",
		"id": "zerostensorflow.",
		"sublist": []
	},
	{
		"text": "zeros_like",
		"id": "zeros_liketensorflow.",
		"sublist": []
	},
	{
		"text": "zeta",
		"id": "zetatensorflow.",
		"sublist": []
	}
]
